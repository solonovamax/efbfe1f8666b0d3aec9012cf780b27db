[{"name":"BAN_RIGHTS","description":"net.silkmc.silk.commands.PermissionLevel.BAN_RIGHTS","location":"silk-commands/net.silkmc.silk.commands/-permission-level/-b-a-n_-r-i-g-h-t-s/index.html","searchKeys":["BAN_RIGHTS","BAN_RIGHTS","net.silkmc.silk.commands.PermissionLevel.BAN_RIGHTS"]},{"name":"BYPASS_SPAWN_PROTECTION","description":"net.silkmc.silk.commands.PermissionLevel.BYPASS_SPAWN_PROTECTION","location":"silk-commands/net.silkmc.silk.commands/-permission-level/-b-y-p-a-s-s_-s-p-a-w-n_-p-r-o-t-e-c-t-i-o-n/index.html","searchKeys":["BYPASS_SPAWN_PROTECTION","BYPASS_SPAWN_PROTECTION","net.silkmc.silk.commands.PermissionLevel.BYPASS_SPAWN_PROTECTION"]},{"name":"COMMAND_RIGHTS","description":"net.silkmc.silk.commands.PermissionLevel.COMMAND_RIGHTS","location":"silk-commands/net.silkmc.silk.commands/-permission-level/-c-o-m-m-a-n-d_-r-i-g-h-t-s/index.html","searchKeys":["COMMAND_RIGHTS","COMMAND_RIGHTS","net.silkmc.silk.commands.PermissionLevel.COMMAND_RIGHTS"]},{"name":"NONE","description":"net.silkmc.silk.commands.PermissionLevel.NONE","location":"silk-commands/net.silkmc.silk.commands/-permission-level/-n-o-n-e/index.html","searchKeys":["NONE","NONE","net.silkmc.silk.commands.PermissionLevel.NONE"]},{"name":"OWNER","description":"net.silkmc.silk.commands.PermissionLevel.OWNER","location":"silk-commands/net.silkmc.silk.commands/-permission-level/-o-w-n-e-r/index.html","searchKeys":["OWNER","OWNER","net.silkmc.silk.commands.PermissionLevel.OWNER"]},{"name":"abstract class CommandBuilder<Source : SharedSuggestionProvider, Builder : ArgumentBuilder<Source, Builder>, Node : CommandNode<Source>>","description":"net.silkmc.silk.commands.CommandBuilder","location":"silk-commands/net.silkmc.silk.commands/-command-builder/index.html","searchKeys":["CommandBuilder","abstract class CommandBuilder<Source : SharedSuggestionProvider, Builder : ArgumentBuilder<Source, Builder>, Node : CommandNode<Source>>","net.silkmc.silk.commands.CommandBuilder"]},{"name":"abstract fun getConnection(): ClientPacketListener","description":"net.silkmc.silk.commands.mixin.client.ClientSuggestionProviderAccessor.getConnection","location":"silk-commands/net.silkmc.silk.commands.mixin.client/-client-suggestion-provider-accessor/get-connection.html","searchKeys":["getConnection","abstract fun getConnection(): ClientPacketListener","net.silkmc.silk.commands.mixin.client.ClientSuggestionProviderAccessor.getConnection"]},{"name":"abstract fun getMinecraft(): Minecraft","description":"net.silkmc.silk.commands.mixin.client.ClientSuggestionProviderAccessor.getMinecraft","location":"silk-commands/net.silkmc.silk.commands.mixin.client/-client-suggestion-provider-accessor/get-minecraft.html","searchKeys":["getMinecraft","abstract fun getMinecraft(): Minecraft","net.silkmc.silk.commands.mixin.client.ClientSuggestionProviderAccessor.getMinecraft"]},{"name":"class ArgumentCommandBuilder<Source : SharedSuggestionProvider, T>(name: String, typeProvider: (CommandBuildContext) -> ArgumentType<T>) : CommandBuilder<Source, RequiredArgumentBuilder<Source, T>, ArgumentCommandNode<Source, T>> ","description":"net.silkmc.silk.commands.ArgumentCommandBuilder","location":"silk-commands/net.silkmc.silk.commands/-argument-command-builder/index.html","searchKeys":["ArgumentCommandBuilder","class ArgumentCommandBuilder<Source : SharedSuggestionProvider, T>(name: String, typeProvider: (CommandBuildContext) -> ArgumentType<T>) : CommandBuilder<Source, RequiredArgumentBuilder<Source, T>, ArgumentCommandNode<Source, T>> ","net.silkmc.silk.commands.ArgumentCommandBuilder"]},{"name":"class LiteralCommandBuilder<Source : SharedSuggestionProvider>(name: String) : CommandBuilder<Source, LiteralArgumentBuilder<Source>, LiteralCommandNode<Source>> ","description":"net.silkmc.silk.commands.LiteralCommandBuilder","location":"silk-commands/net.silkmc.silk.commands/-literal-command-builder/index.html","searchKeys":["LiteralCommandBuilder","class LiteralCommandBuilder<Source : SharedSuggestionProvider>(name: String) : CommandBuilder<Source, LiteralArgumentBuilder<Source>, LiteralCommandNode<Source>> ","net.silkmc.silk.commands.LiteralCommandBuilder"]},{"name":"class RegisterClientEvent(val dispatcher: CommandDispatcher<ClientCommandSourceStack>, val context: CommandBuildContext)","description":"net.silkmc.silk.commands.event.CommandEvents.RegisterClientEvent","location":"silk-commands/net.silkmc.silk.commands.event/-command-events/-register-client-event/index.html","searchKeys":["RegisterClientEvent","class RegisterClientEvent(val dispatcher: CommandDispatcher<ClientCommandSourceStack>, val context: CommandBuildContext)","net.silkmc.silk.commands.event.CommandEvents.RegisterClientEvent"]},{"name":"class RegisterEvent(val dispatcher: CommandDispatcher<CommandSourceStack>, val context: CommandBuildContext, val selection: Commands.CommandSelection)","description":"net.silkmc.silk.commands.event.CommandEvents.RegisterEvent","location":"silk-commands/net.silkmc.silk.commands.event/-command-events/-register-event/index.html","searchKeys":["RegisterEvent","class RegisterEvent(val dispatcher: CommandDispatcher<CommandSourceStack>, val context: CommandBuildContext, val selection: Commands.CommandSelection)","net.silkmc.silk.commands.event.CommandEvents.RegisterEvent"]},{"name":"class RegistrableCommand<Source : SharedSuggestionProvider>(val commandBuilder: LiteralCommandBuilder<Source>)","description":"net.silkmc.silk.commands.RegistrableCommand","location":"silk-commands/net.silkmc.silk.commands/-registrable-command/index.html","searchKeys":["RegistrableCommand","class RegistrableCommand<Source : SharedSuggestionProvider>(val commandBuilder: LiteralCommandBuilder<Source>)","net.silkmc.silk.commands.RegistrableCommand"]},{"name":"constructor()","description":"net.silkmc.silk.commands.CommandBuilder.CommandBuilder","location":"silk-commands/net.silkmc.silk.commands/-command-builder/-command-builder.html","searchKeys":["CommandBuilder","constructor()","net.silkmc.silk.commands.CommandBuilder.CommandBuilder"]},{"name":"constructor()","description":"net.silkmc.silk.commands.mixin.MixinCommands.MixinCommands","location":"silk-commands/net.silkmc.silk.commands.mixin/-mixin-commands/-mixin-commands.html","searchKeys":["MixinCommands","constructor()","net.silkmc.silk.commands.mixin.MixinCommands.MixinCommands"]},{"name":"constructor()","description":"net.silkmc.silk.commands.mixin.client.MixinClientPacketListener.MixinClientPacketListener","location":"silk-commands/net.silkmc.silk.commands.mixin.client/-mixin-client-packet-listener/-mixin-client-packet-listener.html","searchKeys":["MixinClientPacketListener","constructor()","net.silkmc.silk.commands.mixin.client.MixinClientPacketListener.MixinClientPacketListener"]},{"name":"constructor(commandBuilder: LiteralCommandBuilder<Source>)","description":"net.silkmc.silk.commands.RegistrableCommand.RegistrableCommand","location":"silk-commands/net.silkmc.silk.commands/-registrable-command/-registrable-command.html","searchKeys":["RegistrableCommand","constructor(commandBuilder: LiteralCommandBuilder<Source>)","net.silkmc.silk.commands.RegistrableCommand.RegistrableCommand"]},{"name":"constructor(dispatcher: CommandDispatcher<ClientCommandSourceStack>, context: CommandBuildContext)","description":"net.silkmc.silk.commands.event.CommandEvents.RegisterClientEvent.RegisterClientEvent","location":"silk-commands/net.silkmc.silk.commands.event/-command-events/-register-client-event/-register-client-event.html","searchKeys":["RegisterClientEvent","constructor(dispatcher: CommandDispatcher<ClientCommandSourceStack>, context: CommandBuildContext)","net.silkmc.silk.commands.event.CommandEvents.RegisterClientEvent.RegisterClientEvent"]},{"name":"constructor(dispatcher: CommandDispatcher<CommandSourceStack>, context: CommandBuildContext, selection: Commands.CommandSelection)","description":"net.silkmc.silk.commands.event.CommandEvents.RegisterEvent.RegisterEvent","location":"silk-commands/net.silkmc.silk.commands.event/-command-events/-register-event/-register-event.html","searchKeys":["RegisterEvent","constructor(dispatcher: CommandDispatcher<CommandSourceStack>, context: CommandBuildContext, selection: Commands.CommandSelection)","net.silkmc.silk.commands.event.CommandEvents.RegisterEvent.RegisterEvent"]},{"name":"constructor(name: String)","description":"net.silkmc.silk.commands.LiteralCommandBuilder.LiteralCommandBuilder","location":"silk-commands/net.silkmc.silk.commands/-literal-command-builder/-literal-command-builder.html","searchKeys":["LiteralCommandBuilder","constructor(name: String)","net.silkmc.silk.commands.LiteralCommandBuilder.LiteralCommandBuilder"]},{"name":"constructor(name: String, typeProvider: (CommandBuildContext) -> ArgumentType<T>)","description":"net.silkmc.silk.commands.ArgumentCommandBuilder.ArgumentCommandBuilder","location":"silk-commands/net.silkmc.silk.commands/-argument-command-builder/-argument-command-builder.html","searchKeys":["ArgumentCommandBuilder","constructor(name: String, typeProvider: (CommandBuildContext) -> ArgumentType<T>)","net.silkmc.silk.commands.ArgumentCommandBuilder.ArgumentCommandBuilder"]},{"name":"enum PermissionLevel : Enum<PermissionLevel> ","description":"net.silkmc.silk.commands.PermissionLevel","location":"silk-commands/net.silkmc.silk.commands/-permission-level/index.html","searchKeys":["PermissionLevel","enum PermissionLevel : Enum<PermissionLevel> ","net.silkmc.silk.commands.PermissionLevel"]},{"name":"fun ClientCommandSourceStack.sendFailure(message: Component)","description":"net.silkmc.silk.commands.sendFailure","location":"silk-commands/net.silkmc.silk.commands/send-failure.html","searchKeys":["sendFailure","fun ClientCommandSourceStack.sendFailure(message: Component)","net.silkmc.silk.commands.sendFailure"]},{"name":"fun ClientCommandSourceStack.sendSuccess(message: Component)","description":"net.silkmc.silk.commands.sendSuccess","location":"silk-commands/net.silkmc.silk.commands/send-success.html","searchKeys":["sendSuccess","fun ClientCommandSourceStack.sendSuccess(message: Component)","net.silkmc.silk.commands.sendSuccess"]},{"name":"fun LiteralArgumentBuilder<ClientCommandSourceStack>.register()","description":"net.silkmc.silk.commands.registration.register","location":"silk-commands/net.silkmc.silk.commands.registration/register.html","searchKeys":["register","fun LiteralArgumentBuilder<ClientCommandSourceStack>.register()","net.silkmc.silk.commands.registration.register"]},{"name":"fun LiteralArgumentBuilder<ClientCommandSourceStack>.setupRegistrationCallback()","description":"net.silkmc.silk.commands.registration.setupRegistrationCallback","location":"silk-commands/net.silkmc.silk.commands.registration/setup-registration-callback.html","searchKeys":["setupRegistrationCallback","fun LiteralArgumentBuilder<ClientCommandSourceStack>.setupRegistrationCallback()","net.silkmc.silk.commands.registration.setupRegistrationCallback"]},{"name":"fun LiteralArgumentBuilder<CommandSourceStack>.setupRegistrationCallback()","description":"net.silkmc.silk.commands.registration.setupRegistrationCallback","location":"silk-commands/net.silkmc.silk.commands.registration/setup-registration-callback.html","searchKeys":["setupRegistrationCallback","fun LiteralArgumentBuilder<CommandSourceStack>.setupRegistrationCallback()","net.silkmc.silk.commands.registration.setupRegistrationCallback"]},{"name":"fun RegistrableCommand<ClientCommandSourceStack>.register()","description":"net.silkmc.silk.commands.registration.register","location":"silk-commands/net.silkmc.silk.commands.registration/register.html","searchKeys":["register","fun RegistrableCommand<ClientCommandSourceStack>.register()","net.silkmc.silk.commands.registration.register"]},{"name":"fun RegistrableCommand<ClientCommandSourceStack>.setupRegistrationCallback()","description":"net.silkmc.silk.commands.registration.setupRegistrationCallback","location":"silk-commands/net.silkmc.silk.commands.registration/setup-registration-callback.html","searchKeys":["setupRegistrationCallback","fun RegistrableCommand<ClientCommandSourceStack>.setupRegistrationCallback()","net.silkmc.silk.commands.registration.setupRegistrationCallback"]},{"name":"fun RegistrableCommand<CommandSourceStack>.setupRegistrationCallback()","description":"net.silkmc.silk.commands.registration.setupRegistrationCallback","location":"silk-commands/net.silkmc.silk.commands.registration/setup-registration-callback.html","searchKeys":["setupRegistrationCallback","fun RegistrableCommand<CommandSourceStack>.setupRegistrationCallback()","net.silkmc.silk.commands.registration.setupRegistrationCallback"]},{"name":"fun alias(vararg name: String)","description":"net.silkmc.silk.commands.LiteralCommandBuilder.alias","location":"silk-commands/net.silkmc.silk.commands/-literal-command-builder/alias.html","searchKeys":["alias","fun alias(vararg name: String)","net.silkmc.silk.commands.LiteralCommandBuilder.alias"]},{"name":"fun applyCommands(dispatcher: CommandDispatcher<SharedSuggestionProvider>)","description":"net.silkmc.silk.commands.internal.ClientCommandHandler.applyCommands","location":"silk-commands/net.silkmc.silk.commands.internal/-client-command-handler/apply-commands.html","searchKeys":["applyCommands","fun applyCommands(dispatcher: CommandDispatcher<SharedSuggestionProvider>)","net.silkmc.silk.commands.internal.ClientCommandHandler.applyCommands"]},{"name":"fun brigadier(block: Builder.(context: CommandBuildContext) -> Unit): CommandBuilder<Source, Builder, Node>","description":"net.silkmc.silk.commands.CommandBuilder.brigadier","location":"silk-commands/net.silkmc.silk.commands/-command-builder/brigadier.html","searchKeys":["brigadier","fun brigadier(block: Builder.(context: CommandBuildContext) -> Unit): CommandBuilder<Source, Builder, Node>","net.silkmc.silk.commands.CommandBuilder.brigadier"]},{"name":"fun executeCommand(command: String, player: LocalPlayer): Boolean","description":"net.silkmc.silk.commands.internal.ClientCommandHandler.executeCommand","location":"silk-commands/net.silkmc.silk.commands.internal/-client-command-handler/execute-command.html","searchKeys":["executeCommand","fun executeCommand(command: String, player: LocalPlayer): Boolean","net.silkmc.silk.commands.internal.ClientCommandHandler.executeCommand"]},{"name":"fun refreshDispatcher(context: CommandBuildContext)","description":"net.silkmc.silk.commands.internal.ClientCommandHandler.refreshDispatcher","location":"silk-commands/net.silkmc.silk.commands.internal/-client-command-handler/refresh-dispatcher.html","searchKeys":["refreshDispatcher","fun refreshDispatcher(context: CommandBuildContext)","net.silkmc.silk.commands.internal.ClientCommandHandler.refreshDispatcher"]},{"name":"fun requires(predicate: (source: Source) -> Boolean): CommandBuilder<Source, Builder, Node>","description":"net.silkmc.silk.commands.CommandBuilder.requires","location":"silk-commands/net.silkmc.silk.commands/-command-builder/requires.html","searchKeys":["requires","fun requires(predicate: (source: Source) -> Boolean): CommandBuilder<Source, Builder, Node>","net.silkmc.silk.commands.CommandBuilder.requires"]},{"name":"fun requiresPermissionLevel(level: Int): CommandBuilder<Source, Builder, Node>","description":"net.silkmc.silk.commands.CommandBuilder.requiresPermissionLevel","location":"silk-commands/net.silkmc.silk.commands/-command-builder/requires-permission-level.html","searchKeys":["requiresPermissionLevel","fun requiresPermissionLevel(level: Int): CommandBuilder<Source, Builder, Node>","net.silkmc.silk.commands.CommandBuilder.requiresPermissionLevel"]},{"name":"fun requiresPermissionLevel(level: PermissionLevel): CommandBuilder<Source, Builder, Node>","description":"net.silkmc.silk.commands.CommandBuilder.requiresPermissionLevel","location":"silk-commands/net.silkmc.silk.commands/-command-builder/requires-permission-level.html","searchKeys":["requiresPermissionLevel","fun requiresPermissionLevel(level: PermissionLevel): CommandBuilder<Source, Builder, Node>","net.silkmc.silk.commands.CommandBuilder.requiresPermissionLevel"]},{"name":"fun simpleSuggests(coroutineScope: CoroutineScope = silkCoroutineScope, suggestionBuilder: suspend (CommandContext<Source>) -> Iterable<Any?>?): ArgumentCommandBuilder<Source, T>","description":"net.silkmc.silk.commands.ArgumentCommandBuilder.simpleSuggests","location":"silk-commands/net.silkmc.silk.commands/-argument-command-builder/simple-suggests.html","searchKeys":["simpleSuggests","fun simpleSuggests(coroutineScope: CoroutineScope = silkCoroutineScope, suggestionBuilder: suspend (CommandContext<Source>) -> Iterable<Any?>?): ArgumentCommandBuilder<Source, T>","net.silkmc.silk.commands.ArgumentCommandBuilder.simpleSuggests"]},{"name":"fun valueOf(value: String): PermissionLevel","description":"net.silkmc.silk.commands.PermissionLevel.valueOf","location":"silk-commands/net.silkmc.silk.commands/-permission-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PermissionLevel","net.silkmc.silk.commands.PermissionLevel.valueOf"]},{"name":"fun values(): Array<PermissionLevel>","description":"net.silkmc.silk.commands.PermissionLevel.values","location":"silk-commands/net.silkmc.silk.commands/-permission-level/values.html","searchKeys":["values","fun values(): Array<PermissionLevel>","net.silkmc.silk.commands.PermissionLevel.values"]},{"name":"infix inline fun runs(crossinline block: CommandContext<Source>.() -> Unit): CommandBuilder<Source, Builder, Node>","description":"net.silkmc.silk.commands.CommandBuilder.runs","location":"silk-commands/net.silkmc.silk.commands/-command-builder/runs.html","searchKeys":["runs","infix inline fun runs(crossinline block: CommandContext<Source>.() -> Unit): CommandBuilder<Source, Builder, Node>","net.silkmc.silk.commands.CommandBuilder.runs"]},{"name":"infix inline fun runsAsync(crossinline block: suspend CommandContext<Source>.() -> Unit): CommandBuilder<Source, Builder, Node>","description":"net.silkmc.silk.commands.CommandBuilder.runsAsync","location":"silk-commands/net.silkmc.silk.commands/-command-builder/runs-async.html","searchKeys":["runsAsync","infix inline fun runsAsync(crossinline block: suspend CommandContext<Source>.() -> Unit): CommandBuilder<Source, Builder, Node>","net.silkmc.silk.commands.CommandBuilder.runsAsync"]},{"name":"infix inline fun simpleExecutes(crossinline executor: CommandContext<Source>.() -> Unit): CommandBuilder<Source, Builder, Node>","description":"net.silkmc.silk.commands.CommandBuilder.simpleExecutes","location":"silk-commands/net.silkmc.silk.commands/-command-builder/simple-executes.html","searchKeys":["simpleExecutes","infix inline fun simpleExecutes(crossinline executor: CommandContext<Source>.() -> Unit): CommandBuilder<Source, Builder, Node>","net.silkmc.silk.commands.CommandBuilder.simpleExecutes"]},{"name":"inline fun <T> argument(name: String, builder: SimpleArgumentBuilder<Source, T> = {}): ArgumentCommandBuilder<Source, T>","description":"net.silkmc.silk.commands.CommandBuilder.argument","location":"silk-commands/net.silkmc.silk.commands/-command-builder/argument.html","searchKeys":["argument","inline fun <T> argument(name: String, builder: SimpleArgumentBuilder<Source, T> = {}): ArgumentCommandBuilder<Source, T>","net.silkmc.silk.commands.CommandBuilder.argument"]},{"name":"inline fun <T> argument(name: String, crossinline parser: (StringReader) -> T, builder: SimpleArgumentBuilder<Source, T> = {}): ArgumentCommandBuilder<Source, T>","description":"net.silkmc.silk.commands.CommandBuilder.argument","location":"silk-commands/net.silkmc.silk.commands/-command-builder/argument.html","searchKeys":["argument","inline fun <T> argument(name: String, crossinline parser: (StringReader) -> T, builder: SimpleArgumentBuilder<Source, T> = {}): ArgumentCommandBuilder<Source, T>","net.silkmc.silk.commands.CommandBuilder.argument"]},{"name":"inline fun <T> argument(name: String, noinline typeProvider: (CommandBuildContext) -> ArgumentType<T>, builder: SimpleArgumentBuilder<Source, T> = {}): ArgumentCommandBuilder<Source, T>","description":"net.silkmc.silk.commands.CommandBuilder.argument","location":"silk-commands/net.silkmc.silk.commands/-command-builder/argument.html","searchKeys":["argument","inline fun <T> argument(name: String, noinline typeProvider: (CommandBuildContext) -> ArgumentType<T>, builder: SimpleArgumentBuilder<Source, T> = {}): ArgumentCommandBuilder<Source, T>","net.silkmc.silk.commands.CommandBuilder.argument"]},{"name":"inline fun <T> argument(name: String, type: ArgumentType<T>, builder: SimpleArgumentBuilder<Source, T> = {}): ArgumentCommandBuilder<Source, T>","description":"net.silkmc.silk.commands.CommandBuilder.argument","location":"silk-commands/net.silkmc.silk.commands/-command-builder/argument.html","searchKeys":["argument","inline fun <T> argument(name: String, type: ArgumentType<T>, builder: SimpleArgumentBuilder<Source, T> = {}): ArgumentCommandBuilder<Source, T>","net.silkmc.silk.commands.CommandBuilder.argument"]},{"name":"inline fun <T> fromReifiedType(context: CommandBuildContext): ArgumentType<T>","description":"net.silkmc.silk.commands.internal.ArgumentTypeUtils.fromReifiedType","location":"silk-commands/net.silkmc.silk.commands.internal/-argument-type-utils/from-reified-type.html","searchKeys":["fromReifiedType","inline fun <T> fromReifiedType(context: CommandBuildContext): ArgumentType<T>","net.silkmc.silk.commands.internal.ArgumentTypeUtils.fromReifiedType"]},{"name":"inline fun clientCommand(name: String, register: Boolean = true, builder: LiteralCommandBuilder<ClientCommandSourceStack>.() -> Unit = {}): RegistrableCommand<ClientCommandSourceStack>","description":"net.silkmc.silk.commands.clientCommand","location":"silk-commands/net.silkmc.silk.commands/client-command.html","searchKeys":["clientCommand","inline fun clientCommand(name: String, register: Boolean = true, builder: LiteralCommandBuilder<ClientCommandSourceStack>.() -> Unit = {}): RegistrableCommand<ClientCommandSourceStack>","net.silkmc.silk.commands.clientCommand"]},{"name":"inline fun command(name: String, register: Boolean = true, builder: LiteralCommandBuilder<CommandSourceStack>.() -> Unit = {}): RegistrableCommand<CommandSourceStack>","description":"net.silkmc.silk.commands.command","location":"silk-commands/net.silkmc.silk.commands/command.html","searchKeys":["command","inline fun command(name: String, register: Boolean = true, builder: LiteralCommandBuilder<CommandSourceStack>.() -> Unit = {}): RegistrableCommand<CommandSourceStack>","net.silkmc.silk.commands.command"]},{"name":"inline fun literal(name: String, builder: LiteralCommandBuilder<Source>.() -> Unit = {}): LiteralCommandBuilder<Source>","description":"net.silkmc.silk.commands.CommandBuilder.literal","location":"silk-commands/net.silkmc.silk.commands/-command-builder/literal.html","searchKeys":["literal","inline fun literal(name: String, builder: LiteralCommandBuilder<Source>.() -> Unit = {}): LiteralCommandBuilder<Source>","net.silkmc.silk.commands.CommandBuilder.literal"]},{"name":"inline fun suggestList(crossinline suggestionsBuilder: (CommandContext<Source>) -> Iterable<Any?>?): ArgumentCommandBuilder<Source, T>","description":"net.silkmc.silk.commands.ArgumentCommandBuilder.suggestList","location":"silk-commands/net.silkmc.silk.commands/-argument-command-builder/suggest-list.html","searchKeys":["suggestList","inline fun suggestList(crossinline suggestionsBuilder: (CommandContext<Source>) -> Iterable<Any?>?): ArgumentCommandBuilder<Source, T>","net.silkmc.silk.commands.ArgumentCommandBuilder.suggestList"]},{"name":"inline fun suggestListSuspending(coroutineScope: CoroutineScope = silkCoroutineScope, crossinline suggestionsBuilder: suspend (CommandContext<Source>) -> Iterable<Any?>?): ArgumentCommandBuilder<Source, T>","description":"net.silkmc.silk.commands.ArgumentCommandBuilder.suggestListSuspending","location":"silk-commands/net.silkmc.silk.commands/-argument-command-builder/suggest-list-suspending.html","searchKeys":["suggestListSuspending","inline fun suggestListSuspending(coroutineScope: CoroutineScope = silkCoroutineScope, crossinline suggestionsBuilder: suspend (CommandContext<Source>) -> Iterable<Any?>?): ArgumentCommandBuilder<Source, T>","net.silkmc.silk.commands.ArgumentCommandBuilder.suggestListSuspending"]},{"name":"inline fun suggestListWithTooltips(crossinline suggestionsBuilder: (CommandContext<Source>) -> Iterable<Pair<Any?, Message>?>?): ArgumentCommandBuilder<Source, T>","description":"net.silkmc.silk.commands.ArgumentCommandBuilder.suggestListWithTooltips","location":"silk-commands/net.silkmc.silk.commands/-argument-command-builder/suggest-list-with-tooltips.html","searchKeys":["suggestListWithTooltips","inline fun suggestListWithTooltips(crossinline suggestionsBuilder: (CommandContext<Source>) -> Iterable<Pair<Any?, Message>?>?): ArgumentCommandBuilder<Source, T>","net.silkmc.silk.commands.ArgumentCommandBuilder.suggestListWithTooltips"]},{"name":"inline fun suggestListWithTooltipsSuspending(coroutineScope: CoroutineScope = silkCoroutineScope, crossinline suggestionsBuilder: (CommandContext<Source>) -> Iterable<Pair<Any?, Message>?>?): ArgumentCommandBuilder<Source, T>","description":"net.silkmc.silk.commands.ArgumentCommandBuilder.suggestListWithTooltipsSuspending","location":"silk-commands/net.silkmc.silk.commands/-argument-command-builder/suggest-list-with-tooltips-suspending.html","searchKeys":["suggestListWithTooltipsSuspending","inline fun suggestListWithTooltipsSuspending(coroutineScope: CoroutineScope = silkCoroutineScope, crossinline suggestionsBuilder: (CommandContext<Source>) -> Iterable<Pair<Any?, Message>?>?): ArgumentCommandBuilder<Source, T>","net.silkmc.silk.commands.ArgumentCommandBuilder.suggestListWithTooltipsSuspending"]},{"name":"inline fun suggestSingle(crossinline suggestionBuilder: (CommandContext<Source>) -> Any?): ArgumentCommandBuilder<Source, T>","description":"net.silkmc.silk.commands.ArgumentCommandBuilder.suggestSingle","location":"silk-commands/net.silkmc.silk.commands/-argument-command-builder/suggest-single.html","searchKeys":["suggestSingle","inline fun suggestSingle(crossinline suggestionBuilder: (CommandContext<Source>) -> Any?): ArgumentCommandBuilder<Source, T>","net.silkmc.silk.commands.ArgumentCommandBuilder.suggestSingle"]},{"name":"inline fun suggestSingleSuspending(coroutineScope: CoroutineScope = silkCoroutineScope, crossinline suggestionBuilder: suspend (CommandContext<Source>) -> Any?): ArgumentCommandBuilder<Source, T>","description":"net.silkmc.silk.commands.ArgumentCommandBuilder.suggestSingleSuspending","location":"silk-commands/net.silkmc.silk.commands/-argument-command-builder/suggest-single-suspending.html","searchKeys":["suggestSingleSuspending","inline fun suggestSingleSuspending(coroutineScope: CoroutineScope = silkCoroutineScope, crossinline suggestionBuilder: suspend (CommandContext<Source>) -> Any?): ArgumentCommandBuilder<Source, T>","net.silkmc.silk.commands.ArgumentCommandBuilder.suggestSingleSuspending"]},{"name":"inline fun suggestSingleWithTooltip(crossinline suggestionBuilder: (CommandContext<Source>) -> Pair<Any, Message>?): ArgumentCommandBuilder<Source, T>","description":"net.silkmc.silk.commands.ArgumentCommandBuilder.suggestSingleWithTooltip","location":"silk-commands/net.silkmc.silk.commands/-argument-command-builder/suggest-single-with-tooltip.html","searchKeys":["suggestSingleWithTooltip","inline fun suggestSingleWithTooltip(crossinline suggestionBuilder: (CommandContext<Source>) -> Pair<Any, Message>?): ArgumentCommandBuilder<Source, T>","net.silkmc.silk.commands.ArgumentCommandBuilder.suggestSingleWithTooltip"]},{"name":"inline fun suggestSingleWithTooltipSuspending(coroutineScope: CoroutineScope = silkCoroutineScope, crossinline suggestionBuilder: suspend (CommandContext<Source>) -> Pair<Any?, Message>?): ArgumentCommandBuilder<Source, T>","description":"net.silkmc.silk.commands.ArgumentCommandBuilder.suggestSingleWithTooltipSuspending","location":"silk-commands/net.silkmc.silk.commands/-argument-command-builder/suggest-single-with-tooltip-suspending.html","searchKeys":["suggestSingleWithTooltipSuspending","inline fun suggestSingleWithTooltipSuspending(coroutineScope: CoroutineScope = silkCoroutineScope, crossinline suggestionBuilder: suspend (CommandContext<Source>) -> Pair<Any?, Message>?): ArgumentCommandBuilder<Source, T>","net.silkmc.silk.commands.ArgumentCommandBuilder.suggestSingleWithTooltipSuspending"]},{"name":"interface ClientSuggestionProviderAccessor","description":"net.silkmc.silk.commands.mixin.client.ClientSuggestionProviderAccessor","location":"silk-commands/net.silkmc.silk.commands.mixin.client/-client-suggestion-provider-accessor/index.html","searchKeys":["ClientSuggestionProviderAccessor","interface ClientSuggestionProviderAccessor","net.silkmc.silk.commands.mixin.client.ClientSuggestionProviderAccessor"]},{"name":"object ArgumentTypeUtils","description":"net.silkmc.silk.commands.internal.ArgumentTypeUtils","location":"silk-commands/net.silkmc.silk.commands.internal/-argument-type-utils/index.html","searchKeys":["ArgumentTypeUtils","object ArgumentTypeUtils","net.silkmc.silk.commands.internal.ArgumentTypeUtils"]},{"name":"object ClientCommandHandler","description":"net.silkmc.silk.commands.internal.ClientCommandHandler","location":"silk-commands/net.silkmc.silk.commands.internal/-client-command-handler/index.html","searchKeys":["ClientCommandHandler","object ClientCommandHandler","net.silkmc.silk.commands.internal.ClientCommandHandler"]},{"name":"object CommandEvents","description":"net.silkmc.silk.commands.event.CommandEvents","location":"silk-commands/net.silkmc.silk.commands.event/-command-events/index.html","searchKeys":["CommandEvents","object CommandEvents","net.silkmc.silk.commands.event.CommandEvents"]},{"name":"open class MixinClientPacketListener","description":"net.silkmc.silk.commands.mixin.client.MixinClientPacketListener","location":"silk-commands/net.silkmc.silk.commands.mixin.client/-mixin-client-packet-listener/index.html","searchKeys":["MixinClientPacketListener","open class MixinClientPacketListener","net.silkmc.silk.commands.mixin.client.MixinClientPacketListener"]},{"name":"open class MixinCommands","description":"net.silkmc.silk.commands.mixin.MixinCommands","location":"silk-commands/net.silkmc.silk.commands.mixin/-mixin-commands/index.html","searchKeys":["MixinCommands","open class MixinCommands","net.silkmc.silk.commands.mixin.MixinCommands"]},{"name":"open fun toBrigadier(context: CommandBuildContext): List<Node>","description":"net.silkmc.silk.commands.CommandBuilder.toBrigadier","location":"silk-commands/net.silkmc.silk.commands/-command-builder/to-brigadier.html","searchKeys":["toBrigadier","open fun toBrigadier(context: CommandBuildContext): List<Node>","net.silkmc.silk.commands.CommandBuilder.toBrigadier"]},{"name":"open override fun toBrigadier(context: CommandBuildContext): List<LiteralCommandNode<Source>>","description":"net.silkmc.silk.commands.LiteralCommandBuilder.toBrigadier","location":"silk-commands/net.silkmc.silk.commands/-literal-command-builder/to-brigadier.html","searchKeys":["toBrigadier","open override fun toBrigadier(context: CommandBuildContext): List<LiteralCommandNode<Source>>","net.silkmc.silk.commands.LiteralCommandBuilder.toBrigadier"]},{"name":"val ClientCommandSourceStack.connection: ClientPacketListener","description":"net.silkmc.silk.commands.connection","location":"silk-commands/net.silkmc.silk.commands/connection.html","searchKeys":["connection","val ClientCommandSourceStack.connection: ClientPacketListener","net.silkmc.silk.commands.connection"]},{"name":"val ClientCommandSourceStack.level: ClientLevel","description":"net.silkmc.silk.commands.level","location":"silk-commands/net.silkmc.silk.commands/level.html","searchKeys":["level","val ClientCommandSourceStack.level: ClientLevel","net.silkmc.silk.commands.level"]},{"name":"val ClientCommandSourceStack.minecraft: Minecraft","description":"net.silkmc.silk.commands.minecraft","location":"silk-commands/net.silkmc.silk.commands/minecraft.html","searchKeys":["minecraft","val ClientCommandSourceStack.minecraft: Minecraft","net.silkmc.silk.commands.minecraft"]},{"name":"val ClientCommandSourceStack.player: LocalPlayer","description":"net.silkmc.silk.commands.player","location":"silk-commands/net.silkmc.silk.commands/player.html","searchKeys":["player","val ClientCommandSourceStack.player: LocalPlayer","net.silkmc.silk.commands.player"]},{"name":"val Events.Command: CommandEvents","description":"net.silkmc.silk.commands.event.Command","location":"silk-commands/net.silkmc.silk.commands.event/-command.html","searchKeys":["Command","val Events.Command: CommandEvents","net.silkmc.silk.commands.event.Command"]},{"name":"val commandBuilder: LiteralCommandBuilder<Source>","description":"net.silkmc.silk.commands.RegistrableCommand.commandBuilder","location":"silk-commands/net.silkmc.silk.commands/-registrable-command/command-builder.html","searchKeys":["commandBuilder","val commandBuilder: LiteralCommandBuilder<Source>","net.silkmc.silk.commands.RegistrableCommand.commandBuilder"]},{"name":"val context: CommandBuildContext","description":"net.silkmc.silk.commands.event.CommandEvents.RegisterClientEvent.context","location":"silk-commands/net.silkmc.silk.commands.event/-command-events/-register-client-event/context.html","searchKeys":["context","val context: CommandBuildContext","net.silkmc.silk.commands.event.CommandEvents.RegisterClientEvent.context"]},{"name":"val context: CommandBuildContext","description":"net.silkmc.silk.commands.event.CommandEvents.RegisterEvent.context","location":"silk-commands/net.silkmc.silk.commands.event/-command-events/-register-event/context.html","searchKeys":["context","val context: CommandBuildContext","net.silkmc.silk.commands.event.CommandEvents.RegisterEvent.context"]},{"name":"val dispatcher: CommandDispatcher<ClientCommandSourceStack>","description":"net.silkmc.silk.commands.event.CommandEvents.RegisterClientEvent.dispatcher","location":"silk-commands/net.silkmc.silk.commands.event/-command-events/-register-client-event/dispatcher.html","searchKeys":["dispatcher","val dispatcher: CommandDispatcher<ClientCommandSourceStack>","net.silkmc.silk.commands.event.CommandEvents.RegisterClientEvent.dispatcher"]},{"name":"val dispatcher: CommandDispatcher<CommandSourceStack>","description":"net.silkmc.silk.commands.event.CommandEvents.RegisterEvent.dispatcher","location":"silk-commands/net.silkmc.silk.commands.event/-command-events/-register-event/dispatcher.html","searchKeys":["dispatcher","val dispatcher: CommandDispatcher<CommandSourceStack>","net.silkmc.silk.commands.event.CommandEvents.RegisterEvent.dispatcher"]},{"name":"val level: Int","description":"net.silkmc.silk.commands.PermissionLevel.level","location":"silk-commands/net.silkmc.silk.commands/-permission-level/level.html","searchKeys":["level","val level: Int","net.silkmc.silk.commands.PermissionLevel.level"]},{"name":"val register: Event<CommandEvents.RegisterEvent, EventScope.Empty>","description":"net.silkmc.silk.commands.event.CommandEvents.register","location":"silk-commands/net.silkmc.silk.commands.event/-command-events/register.html","searchKeys":["register","val register: Event<CommandEvents.RegisterEvent, EventScope.Empty>","net.silkmc.silk.commands.event.CommandEvents.register"]},{"name":"val registerClient: Event<CommandEvents.RegisterClientEvent, EventScope.Empty>","description":"net.silkmc.silk.commands.event.CommandEvents.registerClient","location":"silk-commands/net.silkmc.silk.commands.event/-command-events/register-client.html","searchKeys":["registerClient","val registerClient: Event<CommandEvents.RegisterClientEvent, EventScope.Empty>","net.silkmc.silk.commands.event.CommandEvents.registerClient"]},{"name":"val selection: Commands.CommandSelection","description":"net.silkmc.silk.commands.event.CommandEvents.RegisterEvent.selection","location":"silk-commands/net.silkmc.silk.commands.event/-command-events/-register-event/selection.html","searchKeys":["selection","val selection: Commands.CommandSelection","net.silkmc.silk.commands.event.CommandEvents.RegisterEvent.selection"]}]
